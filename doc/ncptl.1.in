.\" ----------------------------------------------------------------------
.\"
.\" ncptl manual page
.\"
.\" By Scott Pakin <pakin@lanl.gov>
.\"
.\" ----------------------------------------------------------------------
.\"
.\" 
.\" Copyright (C) 2015, Los Alamos National Security, LLC
.\" All rights reserved.
.\" 
.\" Copyright (2015).  Los Alamos National Security, LLC.  This software
.\" was produced under U.S. Government contract DE-AC52-06NA25396
.\" for Los Alamos National Laboratory (LANL), which is operated by
.\" Los Alamos National Security, LLC (LANS) for the U.S. Department
.\" of Energy. The U.S. Government has rights to use, reproduce,
.\" and distribute this software.  NEITHER THE GOVERNMENT NOR LANS
.\" MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY
.\" FOR THE USE OF THIS SOFTWARE. If software is modified to produce
.\" derivative works, such modified software should be clearly marked,
.\" so as not to confuse it with the version available from LANL.
.\" 
.\" Additionally, redistribution and use in source and binary forms,
.\" with or without modification, are permitted provided that the
.\" following conditions are met:
.\" 
.\"   * Redistributions of source code must retain the above copyright
.\"     notice, this list of conditions and the following disclaimer.
.\" 
.\"   * Redistributions in binary form must reproduce the above copyright
.\"     notice, this list of conditions and the following disclaimer
.\"     in the documentation and/or other materials provided with the
.\"     distribution.
.\" 
.\"   * Neither the name of Los Alamos National Security, LLC, Los Alamos
.\"     National Laboratory, the U.S. Government, nor the names of its
.\"     contributors may be used to endorse or promote products derived
.\"     from this software without specific prior written permission.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY LANS AND CONTRIBUTORS "AS IS" AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL LANS OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
.\" OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
.\" OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\" BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
.\" OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
.\" EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\" 
.\"
.\" ----------------------------------------------------------------------
.
.\" Define a properly typeset version of the name "coNCePTuaL".
.ie t .ds co \s-2CO\s+2NC\s-2E\s+2PT\s-2UA\s+2L
.el   .ds co coNCePTuaL
.
.\" The documentation proper begins here.
.TH NCPTL 1 2004-09-24 "v@VERSION@" "\*(co"
.
.SH NAME
ncptl \- the \*(co compiler
.
.SH SYNOPSIS
\fBncptl\fR --help
.LP
\fBncptl\fR [--backend=\fImodule\fR] 
[--quiet] [--no-link | --no-compile] [--keep-ints] [--lenient]
[--filter=\fIsed expr\fR] [--output=\fIfile\fR]
.br
\fIfile.ncptl\fR | --program=\fIprogram-body\fR
.br
[\fIbackend-specific options]
.
.SH DESCRIPTION
.
\*(co is a domain-specific programming language for rapidly
generating programs that measure the performance and/or test the
correctness of networks and network protocol layers.  A few lines of
\*(co code can produce programs that would take significantly more
effort to write in a conventional programming language.
.PP
\fBncptl\fR compiles a high-level \*(co program into a program
written in a lower-level language which makes calls to a particular
communication library.  For example, \fBncptl\fR might compile
\*(co code into C+MPI, Fortran+OpenMP, or Java+RMI.  The compiler
has a modular structure, so new backend languages/libraries can be
added dynamically.
.
.SH OPTIONS
.
The \fBncptl\fR program accepts the following command-line options:
.PP
.IP -h,\ --help
Output brief usage information.
.IP -b,\ --backend=\fImodule\fR
Designate a backend module to use.  The backend module is responsible
for outputting target-language code.  The following backends are
currently supported:
.RS \n[an-margin]u @BACKEND_BULLET_LIST@
.RE
.IP -q,\ --quiet
Prevent \fBncptl\fR from displaying status messages as it runs.
.IP -E,\ --no-compile
Instruct the backend to skip its compilation step (or initial
postprocessing step in backends for which there is no notion of
compilation).
.IP -c,\ --no-link
Instruct the backend to skip its linking step (or final postprocessing
step in backends for which there is no notion of linking).
.IP -K,\ --keep-ints
Keep intermediate files generated by \fBncptl\fR and/or the backend
module (e.g.,\ source code generated in the backend language).
Normally, intermediate files are deleted when no longer needed.
.IP -L,\ --lenient
Make the compiler's semantic-analysis module more lenient of
sloppiness in input programs.  When running with \fC--lenient\fR,
undeclared variables are automatically converted to command-line
options and duplicate long or short command-line options are
automatically renamed.  \fC--lenient\fR is intended to be used with
\fC--program\fR (below) to facilitate expressing short \*(co programs
directly on the \fBncptl\fR command line.
.IP -f,\ --filter=\fIsed\ expr\fR
Apply a \fBsed\fR-style substitution expression to the
backend-translated code (e.g.,\ a \fC.c\fR file output by the
\fCc_udgram\fR backend or a \fC.tex\fR file output by the
\fClatex_vis\fR backend) before the backend compiles it.  The
\fC--filter\fR option can be used multiple times on the command line;
filters are applied in the order specified.  Substitution expressions
must be of the form
\*(lqs/\fIpattern\fR/\fIreplacement\fR/\fIflags\fR\*(rq, although the
\*(lq/\*(rq characters can be replaced by any other character.
\fIpattern\fR is a regular expression; \fIreplacement\fR is an
optional replacement string; and, \fIflags\fR is a sequence of zero or
more modifiers from the set {\fCi\fR, \fCl\fR, \fCm\fR, \fCs\fR,
\fCu\fR, \fCx\fR}, as described in the Python Library Reference.  For
example, \fCi\fR means to perform a case-insensitive substitution.  In
addition, the \fCg\fR flag performs a global search-and-replace
instead of replacing only the first occurrence of \fIpattern\fR.
.IP -o,\ --output=\fIfile\fR
Write the resulting low-level program to file \fIfile\fR instead of to
the standard output device.
.IP -p,\ --program=\fIprogram-body\fR
Because \*(co programs can be quite short, \fBncptl\fR makes it
possible to write a complete program on the command line as an
argument to \fC--program\fR.
.PP
If a program body is listed using \fC--program\fR, \fBncptl\fR
compiles that program.  If not, then \fBncptl\fR compiles the named
\*(co file (which, by convention, has a \fC.ncptl\fR extension).  If
no such file is named then \fBncptl\fR will expect to read a \*(co
program from the standard input device.
.PP
\fBncptl\fR stops processing the command line at the first
unrecognized option it encounters.  That option and all subsequent
options\(emincluding those which \fBncptl\fR would otherwise
process\(emare passed to the backend without interpretation by
\fBncptl\fR.  Furthermore, the \fC--\fR (i.e.,\ empty) option tells
\fBncptl\fR explicitly to stop processing the command line at that
point.  For example, in the command \fCncptl --lenient myprogram.ncptl
-- --help\fR, \fBncptl\fR will process the \fC--lenient\fR option but
will pass \fC--help\fR to the backend even though \fBncptl\fR has its
own \fC--help\fR option.
.
.SH EXAMPLES
.
Compile \fCmyprog.ncptl\fR into \fCmyprog.c\fR, a C program which uses
MPI for interprocess communication:
.PP
.ft CW
.nf
    ncptl --backend=c_mpi --output=myprog.c myprog.ncptl
.fi
.ft R
.PP
Compile a \*(lqhello, world\*(rq program specified on the command line
using the backend specified by the \s-1NCPTL_BACKEND\s+1 environment
variable and writing the generated low-level code to the standard
output device:
.PP
.ft CW
.nf
    ncptl --program='Task 0 outputs "Hello, world.".'
.fi
.ft R
.PP
.
.SH ENVIRONMENT
.
.IP \fCNCPTL_BACKEND\fR
The backend module to use for code generation (e.g.,\ \fCc_mpi\fR)
.IP \fCNCPTL_PATH\fR
A list of directories in which to search for \*(co backends; defaults
to the Python path
.
.SH SEE ALSO
.
.IR ncptl-replaytrace (1),
.IR sed (1),
the \*(co User's Guide, and the Python Library Reference
.
.SH AUTHOR
.
Scott Pakin, \fIpakin@lanl.gov\fR
